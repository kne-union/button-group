{"version":3,"file":"static/js/268.95a630c4.chunk.js","mappings":"mNAGA,MCH6D,GAAgBA,YDGxD,CACjBC,KAAM,eACNC,QAAS,4RAMTC,YAAa,+HACbC,YAAa,oBACbC,IAAK,s8HA8KLC,QAAS,CACLC,QAAQ,EACRC,UAAW,qBACXC,MAAO,qGAKPC,KAAM,CAAC,CACXC,MAAO,cACPR,YAAa,mDACbS,KAAM,s0IA+KNC,MAAO,CAAC,CACRZ,KAAM,eACNG,YAAa,gCACbU,gBAAiB,oDACjBC,UAAW,GACb,CACEd,KAAM,OACNG,YAAa,OACbW,UAAW,KAEb,CACEJ,MAAO,gBACPR,YAAa,mDACbS,KAAM,kuBAwBNC,MAAO,CAAC,CACRZ,KAAM,eACNG,YAAa,gCACbU,gBAAiB,oDACjBC,UAAW,GACb,CACEd,KAAM,OACNG,YAAa,OACbW,UAAW,KAEb,CACEJ,MAAO,gBACPR,YAAa,mDACbS,KAAM,u/OAwGNC,MAAO,CAAC,CACRZ,KAAM,eACNG,YAAa,gCACbU,gBAAiB,oDACjBC,UAAW,GACb,CACEd,KAAM,OACNG,YAAa,OACbW,UAAW,KAEb,CACEJ,MAAO,cACPR,YAAa,mDACbS,KAAM,mdAqBNC,MAAO,CAAC,CACRZ,KAAM,eACNG,YAAa,gCACbU,gBAAiB,oDACjBC,UAAW,GACb,CACEd,KAAM,OACNG,YAAa,OACbW,UAAW,SCxjBFC,EAAW,CAAC,KAAO,eAAe,QAAU,QAAQ,gBAAe,EAAK,aAAa,gBAAgB,QAAU,CAAC,CAAC,KAAO,eAAe,QAAU,8CAA8C,YAAc,+HAAgC,YAAc,sB","sources":["../../README.md","../node_modules/readme/modules.js"],"sourcesContent":["import * as component_1 from '@kne/current-lib_button-group';\nimport * as component_2 from 'antd';\nimport '@kne/current-lib_button-group/dist/index.css';\nconst readmeConfig = {\n    name: `button-group`,\n    summary: `<h1>button-group</h1>\n<h3>描述</h3>\n<p>实现了一个按钮组,loading按钮,确认按钮和加载按钮.</p>\n<h3>安装</h3>\n<pre><code class=\"language-shell\">npm i --save @kne/button-group\n</code></pre>`,\n    description: `实现了一个按钮组,loading按钮,确认按钮和加载按钮.`,\n    packageName: `@kne/button-group`,\n    api: `<h3>ButtonGroup</h3>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>list</td>\n<td>button按钮属性的数组</td>\n<td>array</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>more</td>\n<td>更多按钮占位</td>\n<td>jsx</td>\n<td>&lt;Button&gt;更多&lt;Icon type=\"icon-arrow-thin-down\"/&gt;&lt;/Button&gt;</td>\n</tr>\n<tr>\n<td>compact</td>\n<td>是否为紧凑模式</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>size</td>\n<td>当compact为false时为按钮间隔大小，否则为按钮大小</td>\n<td>'small','middle','large',number</td>\n<td>8</td>\n</tr>\n<tr>\n<td>split,align</td>\n<td>参考antd Space</td>\n<td>-</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>ConfirmButton</h3>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>message</td>\n<td>删除提示</td>\n<td>jsx</td>\n<td>确定要删除吗？</td>\n</tr>\n<tr>\n<td>title</td>\n<td>删除提示标题</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>isDelete</td>\n<td>是否为删除操作</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n<tr>\n<td>onClick</td>\n<td>点击确认后执行的事件</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onCancel</td>\n<td>点击取消后执行的事件</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>按钮是否禁用</td>\n<td>boolean</td>\n<td>-</td>\n</tr>\n<tr>\n<td>showCancel</td>\n<td>是否显示取消按钮</td>\n<td>boolean</td>\n<td>-</td>\n</tr>\n<tr>\n<td>cancelText</td>\n<td>取消按钮文案</td>\n<td>string</td>\n<td>取消</td>\n</tr>\n<tr>\n<td>okText</td>\n<td>确认按钮文案</td>\n<td>string</td>\n<td>确认</td>\n</tr>\n<tr>\n<td>isModal</td>\n<td>是否以弹窗方式展示，默认为Popconfirm</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>placement</td>\n<td>当isModal为false时生效，指定Popconfirm的弹出方向</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>getContainer</td>\n<td>指定Popconfirm或Modal弹出位置，一般不需要指定</td>\n<td>function</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>ConfirmLink,ConfirmText</h3>\n<p>另外的一种按钮形式参数同ConfirmButton</p>\n<h3>LoadingButton</h3>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>onClick</td>\n<td>点击按钮触发函数，可以返回一个Promise，当Promise再pending状态时Button将自动处于loading状态，当Promise返回结果会自动从loading切换回普通状态</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>children</td>\n<td>Button的子元素，可以为jsx或者function，为function时可以接收到loading状态用来切换显示内容</td>\n<td>jsx,function</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>FetchButton</h3>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>api</td>\n<td>请求参数参考@kne/react-fetch</td>\n<td>object</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: false,\n        className: `button_group_e0271`,\n        style: `.button_group_e0271 .ant-card {\n  border-color: black;\n  text-align: center;\n  width: 200px;\n}`,\n        list: [{\n    title: `ButtonGroup`,\n    description: `这里填写示例说明`,\n    code: `const { default: ButtonGroup, ConfirmButton } = _ButtonGroup;\nconst { Flex, Button } = antd;\nconst { useState, useEffect } = React;\n\nconst Example = () => {\n  const [width, setWidth] = useState(200);\n  return (<Flex gap={8}>\n    <div style={{ width: \\`\\${width}px\\` }}>\n      <ButtonGroup\n        list={[{\n          type: 'primary', children: '操作1'\n        }, {\n          children: '操作2',\n          tooltipProps: {\n            title: '操作2'\n          }\n        }, {\n          children: '操作3', disabled: true,\n          tooltipProps: {\n            title: '操作3==='\n          }\n        }, {\n          children: '操作3', message: '确定要执行操作吗？', disabled: true\n        }, {\n          children: '操作3', message: '确定要执行操作吗？'\n        }]}\n      />\n    </div>\n    <Flex gap={8}>\n      <Button\n        onClick={() => {\n          setWidth((width) => {\n            return width + 20;\n          });\n        }}\n      >\n        增加容器宽度\n      </Button>\n      <Button\n        onClick={() => {\n          setWidth((width) => {\n            return width - 20;\n          });\n        }}\n      >\n        减少容器宽度\n      </Button>\n    </Flex>\n  </Flex>);\n};\n\nconst CompactExample = () => {\n  const [width, setWidth] = useState(200);\n  return (<Flex gap={8}>\n    <div style={{ width: \\`\\${width}px\\` }}>\n      <ButtonGroup\n        compact\n        list={[{\n          type: 'primary', children: '操作1'\n        }, {\n          children: '操作2'\n        }, {\n          children: '操作3'\n        }, {\n          children: '操作3', message: '确定要执行操作吗？'\n        }]}\n      />\n    </div>\n    <Flex gap={8}>\n      <Button\n        onClick={() => {\n          setWidth((width) => {\n            return width + 20;\n          });\n        }}\n      >\n        增加容器宽度\n      </Button>\n      <Button\n        onClick={() => {\n          setWidth((width) => {\n            return width - 20;\n          });\n        }}\n      >\n        减少容器宽度\n      </Button>\n    </Flex>\n  </Flex>);\n};\n\nconst LoadChildren = ({ children }) => {\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n  }, []);\n  if (loading) {\n    return null;\n  }\n  return children({\n    onClick: () => {\n      console.log('加载完成');\n    }\n  });\n};\nconst FunctionProps = () => {\n  const [width, setWidth] = useState(200);\n  return (<Flex gap={8}>\n    <div style={{ width: \\`\\${width}px\\` }}>\n      <ButtonGroup\n        list={[(props) => {\n          return (<Button {...props} type=\"primary\">\n            操作1\n          </Button>);\n        }, (props) => {\n          return <Button {...props}>操作2</Button>;\n        }, (props) => {\n          return <Button {...props}>操作3</Button>;\n        }, (props) => {\n          return (<LoadChildren key={props.key}>\n            {({ onClick }) => {\n              return (<ConfirmButton\n                {...props}\n                isModal={props.isDropdown}\n                message=\"确定要执行操作吗？\"\n                onClick={onClick}\n              >\n                操作4\n              </ConfirmButton>);\n            }}\n          </LoadChildren>);\n        }]}\n      />\n    </div>\n    <Flex gap={8}>\n      <Button\n        onClick={() => {\n          setWidth((width) => {\n            return width + 20;\n          });\n        }}\n      >\n        增加容器宽度\n      </Button>\n      <Button\n        onClick={() => {\n          setWidth((width) => {\n            return width - 20;\n          });\n        }}\n      >\n        减少容器宽度\n      </Button>\n    </Flex>\n  </Flex>);\n};\n\nconst BaseExample = () => {\n  return <div>\n    <Flex vertical gap={8}>\n      <div>base:</div>\n      <Example />\n      <div>compact:</div>\n      <CompactExample />\n      <div>function props:</div>\n      <FunctionProps />\n    </Flex>\n  </div>;\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_ButtonGroup\",\n    packageName: \"@kne/current-lib_button-group\",\n    importStatement: \"import * as _ButtonGroup from \\\"@kne/button-group\\\"\",\n    component: component_1\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_2\n}]\n},{\n    title: `LoadingButton`,\n    description: `这里填写示例说明`,\n    code: `const { LoadingButton } = _ButtonGroup;\nconst { Space, App } = antd;\nconst BaseExample = () => {\n  const { message } = App.useApp();\n  const clickHandler = () => {\n    message.success('点击按钮1s后完成加载');\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        message.success('完成');\n        resolve();\n      }, 1000);\n    });\n  };\n  return (<Space wrap>\n    <LoadingButton onClick={clickHandler}>按钮</LoadingButton>\n    <LoadingButton onClick={clickHandler}>\n      {(isLoading) => (isLoading ? '正在加载中...' : '切换加载文案')}\n    </LoadingButton>\n  </Space>);\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_ButtonGroup\",\n    packageName: \"@kne/current-lib_button-group\",\n    importStatement: \"import * as _ButtonGroup from \\\"@kne/button-group\\\"\",\n    component: component_1\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_2\n}]\n},{\n    title: `ConfirmButton`,\n    description: `这里填写示例说明`,\n    code: `const { ConfirmButton, ConfirmLink, ConfirmText } = _ButtonGroup;\nconst { Flex } = antd;\nconst BaseExample = () => {\n  return <Flex gap={8} vertical>\n    <Flex gap={8}>\n      <ConfirmButton message=\"确定要删除吗?\" onClick={() => {\n        return new Promise((resolve) => {\n          setTimeout(() => {\n            console.log('确定删除');\n            resolve();\n          }, 500);\n        });\n      }}>删除</ConfirmButton>\n\n      <ConfirmButton disabled message=\"确定要删除吗?\" onClick={() => {\n        console.log('确定删除');\n      }}>删除</ConfirmButton>\n\n      <ConfirmButton title=\"确定要删除吗?\"\n                     message=\"删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除\"\n                     onClick={() => {\n                       return new Promise((resolve) => {\n                         setTimeout(() => {\n                           console.log('确定删除');\n                           resolve();\n                         }, 500);\n                       });\n                     }}>删除</ConfirmButton>\n\n      <ConfirmButton isDelete message=\"确定要删除吗?\" onClick={() => {\n        return new Promise((resolve) => {\n          setTimeout(() => {\n            console.log('确定删除');\n            resolve();\n          }, 500);\n        });\n      }}>删除</ConfirmButton>\n\n      <ConfirmButton isDelete title=\"确定要删除吗?\"\n                     message=\"删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除\"\n                     onClick={() => {\n                       return new Promise((resolve) => {\n                         setTimeout(() => {\n                           console.log('确定删除');\n                           resolve();\n                         }, 500);\n                       });\n                     }}>删除</ConfirmButton>\n    </Flex>\n    <Flex gap={8}>\n      <ConfirmButton isModal message=\"确定要删除吗?\" onClick={() => {\n        return new Promise((resolve) => {\n          setTimeout(() => {\n            console.log('确定删除');\n            resolve();\n          }, 500);\n        });\n      }}>删除</ConfirmButton>\n\n      <ConfirmButton isModal title=\"确定要删除吗?\"\n                     message=\"删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除\"\n                     onClick={() => {\n                       return new Promise((resolve) => {\n                         setTimeout(() => {\n                           console.log('确定删除');\n                           resolve();\n                         }, 500);\n                       });\n                     }}>删除</ConfirmButton>\n\n      <ConfirmButton isModal isDelete message=\"确定要删除吗?\" onClick={() => {\n        return new Promise((resolve) => {\n          setTimeout(() => {\n            console.log('确定删除');\n            resolve();\n          }, 500);\n        });\n      }}>删除</ConfirmButton>\n\n      <ConfirmButton isModal isDelete title=\"确定要删除吗?\"\n                     message=\"删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除删除\"\n                     onClick={() => {\n                       return new Promise((resolve) => {\n                         setTimeout(() => {\n                           console.log('确定删除');\n                           resolve();\n                         }, 500);\n                       });\n                     }}>删除</ConfirmButton>\n    </Flex>\n    <Flex gap={8}>\n      <ConfirmLink onClick={() => {\n        console.log('删除');\n      }}>删除</ConfirmLink>\n      <ConfirmText onClick={() => {\n        console.log('删除');\n      }}>删除</ConfirmText>\n    </Flex>\n  </Flex>;\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_ButtonGroup\",\n    packageName: \"@kne/current-lib_button-group\",\n    importStatement: \"import * as _ButtonGroup from \\\"@kne/button-group\\\"\",\n    component: component_1\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_2\n}]\n},{\n    title: `FetchButton`,\n    description: `这里填写示例说明`,\n    code: `const { FetchButton } = _ButtonGroup;\n\nconst BaseExample = () => {\n  return <div>\n    <FetchButton api={{\n      loader: async () => {\n        return new Promise((resolve, reject) => {\n          setTimeout(() => {\n            resolve({ data: 'xxxxx' });\n          }, 1000);\n        });\n      }\n    }} onClick={(data) => {\n      console.log(data);\n    }}>点击加载数据</FetchButton>\n  </div>;\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_ButtonGroup\",\n    packageName: \"@kne/current-lib_button-group\",\n    importStatement: \"import * as _ButtonGroup from \\\"@kne/button-group\\\"\",\n    component: component_1\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_2\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import ButtonGroup from '@components/button-group/README.md';export default {ButtonGroup};\nexport const manifest = {\"name\":\"button-group\",\"version\":\"0.1.6\",\"open-version\":true,\"public-url\":\"/button-group\",\"modules\":[{\"name\":\"button-group\",\"baseDir\":\"/home/runner/work/button-group/button-group\",\"description\":\"实现了一个按钮组,loading按钮,确认按钮和加载按钮.\",\"packageName\":\"@kne/button-group\"}]};"],"names":["ButtonGroup","name","summary","description","packageName","api","example","isFull","className","style","list","title","code","scope","importStatement","component","manifest"],"sourceRoot":""}